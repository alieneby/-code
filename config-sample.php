<?php

class Config {

    /**
     * (Mandatory) Location of the alien-framework-code folder. Could be relative to this folder or absolute path.
     * @var string $_strAlien
     */
    static $_strAlien = '../alien-framework-code'; // where is the alienframework?

    /**
     * (Mandatory) Log information into log file / db table
     * @var boolean $_fDebug
     */
    static $_fDebug = true;
    
    /**
     * If Log::error() was called, then save debug log in database / file debug.log
     * @var boolean
     */
    static $_fDebugOnError = true;

    /**
     * (Optional) Where to store the debugging data.
     * @var string $_strDebugLog
     */
    static $_strDebugLog = 'logs/debug.log';

    /**
     * (Optional) print system errors into the output stream
     * @see Log::systemError()
     * @var boolean $_fSytemErrorDirectOutput
     */
    static $_fSytemErrorDirectOutput = true;

    /**
     * (Optional) print all log strings to immediately the output stream.
     * @see Log::info()
     * @see Log::error()
     * @see Log::always()
     * @var boolean $_fSytemErrorDirectOutput
     */
    static $_fLogDirectOutput = false; // print all log into the output stream


    // ============================ DATABASE Mysql / MariaDB =================================================

    /**
     * (Optional) Database name
     * @var string $_DB_DB
     */
    static $_DB_DB = 'myDatabaseName';

    /**
     * (Optional) Database server name or IP
     * @var string $_DB_DB
     */
    static $_DB_HOST = 'localhost';

    /**
     * (Optional) Mysql- /MariaDB-Port
     * @var integer $_DB_PORT
     */
    static $_DB_PORT = '14000';

    /**
     * (Optional) Login name
     * @var string $_DB_USER
     */
    static $_DB_USER = 'tom';

    /**
     * (Optional) Login name
     * @var string $_DB_USER
     */
    static $_DB_PWD = 'myPassword';

    /**
     * (Optional) Tablename prefix
     * @var string $_DB_PREFIX
     */
    static $_DB_PREFIX = 'alien_';

    /**
     * (Optional) Path to the folder, where we want to put the generated classes into, which accesses the database.
     * @var string $_strGeneratedDbClassesPath
     */
    static $_strGeneratedDbClassesPath = './db-generated-classes'; // classes generated by the table defenitions

    /**
     * (Optional) Save log data into the database table with that name.
     * @var string $_DB_DEBUG_TABLE
     */
    static $_DB_DEBUG_TABLE = 'debug_log';

    /**
     * (Optional) Connect the database with programm start?
     * If not, then you can connect the database with function dbConnector() (requires DbFunctions.php)
     * @var boolean $_DB_CONNECT_AUTOMATICLY
     */
    static $_DB_CONNECT_AUTOMATICLY = true; // true: datebase is connected during program start


    // ============================ MEMBER VARIABLES, WHICH WILL BE SET AUTOMATICLY in init() ====================

    /**
     * (Mandatory) Are we in a production system?
     * Init() recognizes, if we are in a production system and sets this false,
     * @see Config::init()
     * @var boolean $_fIsProduction
     */
    static $_fIsProduction; 

    /**
     * (Mandatory) Path to to this folder.
     * This value will be set in init().
     * @see Config::init()
     * @var string $_strAbsPath
     */
    static $_strAbsPath; // WILL BE SET IN init()!!

    /**
     * (Mandatory) Hostname
     * This value will be set in init().
     * @see Config::init()
     * @var string $_strServerName
     */
    static $_strServerName; // WILL BE SET IN init()!!


    // ============================ init() method ===============================================================

    /**
     * This method identifies the System we are running on (production or not)
     * AND sets Config member variables
     * AND changes the actual working path to the folder this Config.php is located in
     * AND sets the PHP INCLUDE_PATH to
     *          alien-framework-code
     *          + db-generated-classes
     *          + realpath of this Config.php
     */
    static function init() {
        self::$_strAbsPath = dirname( __FILE__ );
        Config::$_strAbsPath = realpath( dirname( __FILE__ ) );
        Config::$_strServerName = empty( $_SERVER['SERVER_NAME'] ) ? '' : $_SERVER['SERVER_NAME'];

        Config::yourInit(); // are we on a local test system, then use different values.

        $strAlienFramework 
            = ( substr( Config::$_strAlien, 0, 1 ) == '/' || substr( Config::$_strAlien, 1, 2 ) == ':/' )
            ? Config::$_strAlien
            : realpath( Config::$_strAbsPath . '/' . Config::$_strAlien );

        $strGeneratedDbClasses = '';
        if ( ! empty( Config::$_strGeneratedDbClassesPath )  ) {
            $strGeneratedDbClasses 
                = ( substr( Config::$_strGeneratedDbClassesPath, 0, 1 ) == '/' || substr( Config::$_strGeneratedDbClassesPath, 1, 2 ) == ':/' )
                ? Config::$_strGeneratedDbClassesPath
                : realpath( Config::$_strAbsPath . '/' . Config::$_strGeneratedDbClassesPath );
        } 

        set_include_path( $strAlienFramework . PATH_SEPARATOR  . $strGeneratedDbClasses . PATH_SEPARATOR . Config::$_strAbsPath );
        chdir( Config::$_strAbsPath );
    }

    /**
     * ADD YOUR STUFF HERE!
     * Identify the system (Production, Test)
     * and set the therefor the correct configuration values.
     */
    static function yourInit() {
        if ( ! is_dir( '/var/log' ) ) {
            Config::$_fIsProduction = false;
            Config::$_strDebugLog = '../logs/xample01-log-01-file.log';
        }
    }
}

Config::init();
